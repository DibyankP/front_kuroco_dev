{
  "stats": {
    "suites": 1,
    "tests": 15,
    "passes": 15,
    "pending": 0,
    "failures": 0,
    "start": "2020-08-27T11:10:18.711Z",
    "end": "2020-08-27T11:11:08.284Z",
    "duration": 49573,
    "testsRegistered": 15,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "310d9726-865b-40c6-8f69-67a1a7e62cb3",
      "title": "",
      "fullFile": "tests/e2e/specs/pattern/Tags.js",
      "file": "tests/e2e/specs/pattern/Tags.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3bd98f0f-d859-4de6-bb58-513de043a63b",
          "title": "Comment pattern",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "insert comment without required tag_nm -> error",
              "fullTitle": "Comment pattern insert comment without required tag_nm -> error",
              "timedOut": null,
              "duration": 6287,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "a14fa888-d5cc-4f54-8880-e41bc3982cc7",
              "parentUUID": "3bd98f0f-d859-4de6-bb58-513de043a63b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "insert comment with malformed tag_nm -> error",
              "fullTitle": "Comment pattern insert comment with malformed tag_nm -> error",
              "timedOut": null,
              "duration": 3490,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "2c40ca33-7811-4756-aa49-2ff8ac70303f",
              "parentUUID": "3bd98f0f-d859-4de6-bb58-513de043a63b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "insert comment with malformed open_type -> error",
              "fullTitle": "Comment pattern insert comment with malformed open_type -> error",
              "timedOut": null,
              "duration": 3017,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "4d52a84c-27d0-448b-bf06-31d2433f09a0",
              "parentUUID": "3bd98f0f-d859-4de6-bb58-513de043a63b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "insert comment with malformed tag_category_id -> error",
              "fullTitle": "Comment pattern insert comment with malformed tag_category_id -> error",
              "timedOut": null,
              "duration": 3188,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "6b17d009-199d-44fe-b6fd-940f64cea34e",
              "parentUUID": "3bd98f0f-d859-4de6-bb58-513de043a63b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "insert comment with malformed weight -> error",
              "fullTitle": "Comment pattern insert comment with malformed weight -> error",
              "timedOut": null,
              "duration": 2943,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "1a254cb3-f299-4044-9246-37f9f3d8782b",
              "parentUUID": "3bd98f0f-d859-4de6-bb58-513de043a63b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "insert comment with malformed ext_col_01 -> error",
              "fullTitle": "Comment pattern insert comment with malformed ext_col_01 -> error",
              "timedOut": null,
              "duration": 2927,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "ad267b02-50e6-4fda-968a-a327820c08d0",
              "parentUUID": "3bd98f0f-d859-4de6-bb58-513de043a63b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "insert comment with malformed ext_col_02 -> error",
              "fullTitle": "Comment pattern insert comment with malformed ext_col_02 -> error",
              "timedOut": null,
              "duration": 3222,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "da6e02d6-fb6d-41d1-a133-672fb168040d",
              "parentUUID": "3bd98f0f-d859-4de6-bb58-513de043a63b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "insert comment with malformed ext_col_03 -> error",
              "fullTitle": "Comment pattern insert comment with malformed ext_col_03 -> error",
              "timedOut": null,
              "duration": 3141,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "9be49df9-e490-46ec-bb5b-2b7457c98c92",
              "parentUUID": "3bd98f0f-d859-4de6-bb58-513de043a63b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "insert comment with malformed ext_col_04 -> error",
              "fullTitle": "Comment pattern insert comment with malformed ext_col_04 -> error",
              "timedOut": null,
              "duration": 3004,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "002f99c0-13d4-4771-a01e-68efd9182e46",
              "parentUUID": "3bd98f0f-d859-4de6-bb58-513de043a63b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "insert comment with malformed ext_col_05 -> error",
              "fullTitle": "Comment pattern insert comment with malformed ext_col_05 -> error",
              "timedOut": null,
              "duration": 2989,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "25703b34-df6a-49fd-8eb0-870c985d6eaa",
              "parentUUID": "3bd98f0f-d859-4de6-bb58-513de043a63b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "insert comment with malformed ext_col_06 -> error",
              "fullTitle": "Comment pattern insert comment with malformed ext_col_06 -> error",
              "timedOut": null,
              "duration": 3116,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "911c373f-a875-410f-b7a4-8a953709ce5d",
              "parentUUID": "3bd98f0f-d859-4de6-bb58-513de043a63b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "insert comment with malformed ext_col_07 -> error",
              "fullTitle": "Comment pattern insert comment with malformed ext_col_07 -> error",
              "timedOut": null,
              "duration": 2943,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "7805fdfa-2c98-499a-8828-8a6e64e1fd37",
              "parentUUID": "3bd98f0f-d859-4de6-bb58-513de043a63b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "insert comment with malformed ext_col_08 -> error",
              "fullTitle": "Comment pattern insert comment with malformed ext_col_08 -> error",
              "timedOut": null,
              "duration": 3024,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "63b08f40-05d7-48e2-a153-afd698d2a67c",
              "parentUUID": "3bd98f0f-d859-4de6-bb58-513de043a63b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "insert comment with malformed ext_col_09 -> error",
              "fullTitle": "Comment pattern insert comment with malformed ext_col_09 -> error",
              "timedOut": null,
              "duration": 3075,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "a6107836-4208-4b22-948e-e309e51d9d54",
              "parentUUID": "3bd98f0f-d859-4de6-bb58-513de043a63b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "insert comment with malformed ext_col_10 -> error",
              "fullTitle": "Comment pattern insert comment with malformed ext_col_10 -> error",
              "timedOut": null,
              "duration": 3027,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "5dd853de-15de-491b-9898-557c80bd9e25",
              "parentUUID": "3bd98f0f-d859-4de6-bb58-513de043a63b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a14fa888-d5cc-4f54-8880-e41bc3982cc7",
            "2c40ca33-7811-4756-aa49-2ff8ac70303f",
            "4d52a84c-27d0-448b-bf06-31d2433f09a0",
            "6b17d009-199d-44fe-b6fd-940f64cea34e",
            "1a254cb3-f299-4044-9246-37f9f3d8782b",
            "ad267b02-50e6-4fda-968a-a327820c08d0",
            "da6e02d6-fb6d-41d1-a133-672fb168040d",
            "9be49df9-e490-46ec-bb5b-2b7457c98c92",
            "002f99c0-13d4-4771-a01e-68efd9182e46",
            "25703b34-df6a-49fd-8eb0-870c985d6eaa",
            "911c373f-a875-410f-b7a4-8a953709ce5d",
            "7805fdfa-2c98-499a-8828-8a6e64e1fd37",
            "63b08f40-05d7-48e2-a153-afd698d2a67c",
            "a6107836-4208-4b22-948e-e309e51d9d54",
            "5dd853de-15de-491b-9898-557c80bd9e25"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 49393,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.1.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": {
        "reportDir": "report",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true,
        "timestamp": "yyyymmdd_HHMMss"
      },
      "version": "5.1.0"
    }
  }
}