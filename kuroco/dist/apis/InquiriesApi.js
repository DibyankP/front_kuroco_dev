/* tslint:disable */
/* eslint-disable */
import { __awaiter, __extends, __generator } from "tslib";
/**
 * Test
 * test
 *
 * The version of the OpenAPI document: 1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { InlineObject14Description, InlineObject14ToJSON, InlineObject15Description, InlineObject15ToJSON, } from '../models';
var usingModelsDescription = {
    InlineObject14: InlineObject14Description.split('\n').map(function (str) { return "  " + str; }).join('\n'),
    InlineObject15: InlineObject15Description.split('\n').map(function (str) { return "  " + str; }).join('\n'),
};
var InquiriesApiRcmsApi1Inquiry1MessagesGetRequestDescription = (function (usingModelsDescription) { return "{\n    outputFormat?: string;\n    lang?: string;\n    charset?: string;\n    order?: string;\n}"; })(usingModelsDescription);
var InquiriesApiRcmsApi1Inquiry1MessagesSendPostRequestDescription = (function (usingModelsDescription) { return "{\n    inlineObject14: " + usingModelsDescription.InlineObject14 + ";\n    outputFormat?: string;\n    lang?: string;\n    charset?: string;\n}"; })(usingModelsDescription);
var InquiriesApiRcmsApi1Inquiry1MessagesUpdatePostRequestDescription = (function (usingModelsDescription) { return "{\n    inquiryBnId: string;\n    inlineObject15: " + usingModelsDescription.InlineObject15 + ";\n    outputFormat?: string;\n    lang?: string;\n    charset?: string;\n}"; })(usingModelsDescription);
var InquiriesApiRcmsApi1InquiryFormsGetRequestDescription = (function (usingModelsDescription) { return "{\n    outputFormat?: string;\n    lang?: string;\n    charset?: string;\n}"; })(usingModelsDescription);
var InquiriesApiRcmsApi1InquiryFormsInquiryIdGetRequestDescription = (function (usingModelsDescription) { return "{\n    inquiryId: number;\n    outputFormat?: string;\n    lang?: string;\n    charset?: string;\n}"; })(usingModelsDescription);
/**
 * no description
 */
var InquiriesApi = /** @class */ (function (_super) {
    __extends(InquiriesApi, _super);
    function InquiriesApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(InquiriesApi, "className", {
        get: function () {
            return 'InquiriesApi';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InquiriesApi, "infos", {
        get: function () {
            return [
                {
                    class: InquiriesApi,
                    url: "/rcms-api/1/inquiry1/messages",
                    requestMethodName: 'rcmsApi1Inquiry1MessagesGet',
                    requestRequiredParamSample: {},
                    requestParamInterfaceDescription: InquiriesApiRcmsApi1Inquiry1MessagesGetRequestDescription,
                },
                {
                    class: InquiriesApi,
                    url: "/rcms-api/1/inquiry1/messages/send",
                    requestMethodName: 'rcmsApi1Inquiry1MessagesSendPost',
                    requestRequiredParamSample: {
                        inlineObject14: {},
                    },
                    requestParamInterfaceDescription: InquiriesApiRcmsApi1Inquiry1MessagesSendPostRequestDescription,
                },
                {
                    class: InquiriesApi,
                    url: "/rcms-api/1/inquiry1/messages/update",
                    requestMethodName: 'rcmsApi1Inquiry1MessagesUpdatePost',
                    requestRequiredParamSample: {
                        inquiryBnId: {}, inlineObject15: {},
                    },
                    requestParamInterfaceDescription: InquiriesApiRcmsApi1Inquiry1MessagesUpdatePostRequestDescription,
                },
                {
                    class: InquiriesApi,
                    url: "/rcms-api/1/inquiry/forms",
                    requestMethodName: 'rcmsApi1InquiryFormsGet',
                    requestRequiredParamSample: {},
                    requestParamInterfaceDescription: InquiriesApiRcmsApi1InquiryFormsGetRequestDescription,
                },
                {
                    class: InquiriesApi,
                    url: "/rcms-api/1/inquiry/forms/{inquiry_id}".replace("{" + "inquiry_id" + "}", ''),
                    requestMethodName: 'rcmsApi1InquiryFormsInquiryIdGet',
                    requestRequiredParamSample: {
                        inquiryId: {},
                    },
                    requestParamInterfaceDescription: InquiriesApiRcmsApi1InquiryFormsInquiryIdGetRequestDescription,
                },
            ];
        },
        enumerable: true,
        configurable: true
    });
    /**
     *  ### **InquiryMessage::list (v1)**   ## Controller parameters  > **id** `1`
     */
    InquiriesApi.prototype.rcmsApi1Inquiry1MessagesGet = function (requestParameters) {
        return __awaiter(this, void 0, void 0, function () {
            var rcmsApi1Inquiry1MessagesGetRaw;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        rcmsApi1Inquiry1MessagesGetRaw = function (requestParameters) { return __awaiter(_this, void 0, void 0, function () {
                            var queryParameters, headerParameters, response;
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0:
                                        if (requestParameters === null || requestParameters === undefined) {
                                            throw new runtime.RequiredError('request parameter was null or undefined', [
                                                'request parameter was null or undefined when calling rcmsApi1Inquiry1MessagesGet.',
                                                'This method requires parameters even if defined parameters are all optional (not required).',
                                                'In case of that, please specify empty Object.',
                                                'e.g. rcmsApi1Inquiry1MessagesGet({})'
                                            ].join('\n'));
                                        }
                                        queryParameters = {};
                                        if (requestParameters.outputFormat !== undefined) {
                                            queryParameters['_output_format'] = requestParameters.outputFormat;
                                        }
                                        if (requestParameters.lang !== undefined) {
                                            queryParameters['_lang'] = requestParameters.lang;
                                        }
                                        if (requestParameters.charset !== undefined) {
                                            queryParameters['_charset'] = requestParameters.charset;
                                        }
                                        if (requestParameters.order !== undefined) {
                                            queryParameters['order'] = requestParameters.order;
                                        }
                                        headerParameters = {};
                                        if (this.configuration && this.configuration.apiKey) {
                                            headerParameters["X-RCMS-API-ACCESS-TOKEN"] = this.configuration.apiKey("X-RCMS-API-ACCESS-TOKEN"); // Token-Auth authentication
                                        }
                                        return [4 /*yield*/, this.request({
                                                path: "/rcms-api/1/inquiry1/messages",
                                                method: 'GET',
                                                headers: headerParameters,
                                                query: queryParameters,
                                            })];
                                    case 1:
                                        response = _a.sent();
                                        return [2 /*return*/, new runtime.JSONApiResponse(response)];
                                }
                            });
                        }); };
                        return [4 /*yield*/, rcmsApi1Inquiry1MessagesGetRaw(requestParameters)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     *  ### **InquiryMessage::send (v1)**   ## Controller parameters  > **id** `1`
     */
    InquiriesApi.prototype.rcmsApi1Inquiry1MessagesSendPost = function (requestParameters) {
        return __awaiter(this, void 0, void 0, function () {
            var rcmsApi1Inquiry1MessagesSendPostRaw;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        rcmsApi1Inquiry1MessagesSendPostRaw = function (requestParameters) { return __awaiter(_this, void 0, void 0, function () {
                            var queryParameters, headerParameters, response;
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0:
                                        if (requestParameters === null || requestParameters === undefined) {
                                            throw new runtime.RequiredError('request parameter was null or undefined', [
                                                'request parameter was null or undefined when calling rcmsApi1Inquiry1MessagesSendPost.',
                                                'This method requires parameters even if defined parameters are all optional (not required).',
                                                'In case of that, please specify empty Object.',
                                                'e.g. rcmsApi1Inquiry1MessagesSendPost({})'
                                            ].join('\n'));
                                        }
                                        if (requestParameters.inlineObject14 === null || requestParameters.inlineObject14 === undefined) {
                                            throw new runtime.RequiredError('inlineObject14', 'Required parameter requestParameters.inlineObject14 was null or undefined when calling rcmsApi1Inquiry1MessagesSendPost.');
                                        }
                                        queryParameters = {};
                                        if (requestParameters.outputFormat !== undefined) {
                                            queryParameters['_output_format'] = requestParameters.outputFormat;
                                        }
                                        if (requestParameters.lang !== undefined) {
                                            queryParameters['_lang'] = requestParameters.lang;
                                        }
                                        if (requestParameters.charset !== undefined) {
                                            queryParameters['_charset'] = requestParameters.charset;
                                        }
                                        headerParameters = {};
                                        headerParameters['Content-Type'] = 'application/json';
                                        if (this.configuration && this.configuration.apiKey) {
                                            headerParameters["X-RCMS-API-ACCESS-TOKEN"] = this.configuration.apiKey("X-RCMS-API-ACCESS-TOKEN"); // Token-Auth authentication
                                        }
                                        return [4 /*yield*/, this.request({
                                                path: "/rcms-api/1/inquiry1/messages/send",
                                                method: 'POST',
                                                headers: headerParameters,
                                                query: queryParameters,
                                                body: InlineObject14ToJSON(requestParameters.inlineObject14),
                                            })];
                                    case 1:
                                        response = _a.sent();
                                        return [2 /*return*/, new runtime.JSONApiResponse(response)];
                                }
                            });
                        }); };
                        return [4 /*yield*/, rcmsApi1Inquiry1MessagesSendPostRaw(requestParameters)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     *  ### **InquiryMessage::update (v1)**   ## Controller parameters  > **id** `1`
     */
    InquiriesApi.prototype.rcmsApi1Inquiry1MessagesUpdatePost = function (requestParameters) {
        return __awaiter(this, void 0, void 0, function () {
            var rcmsApi1Inquiry1MessagesUpdatePostRaw;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        rcmsApi1Inquiry1MessagesUpdatePostRaw = function (requestParameters) { return __awaiter(_this, void 0, void 0, function () {
                            var queryParameters, headerParameters, response;
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0:
                                        if (requestParameters === null || requestParameters === undefined) {
                                            throw new runtime.RequiredError('request parameter was null or undefined', [
                                                'request parameter was null or undefined when calling rcmsApi1Inquiry1MessagesUpdatePost.',
                                                'This method requires parameters even if defined parameters are all optional (not required).',
                                                'In case of that, please specify empty Object.',
                                                'e.g. rcmsApi1Inquiry1MessagesUpdatePost({})'
                                            ].join('\n'));
                                        }
                                        if (requestParameters.inquiryBnId === null || requestParameters.inquiryBnId === undefined) {
                                            throw new runtime.RequiredError('inquiryBnId', 'Required parameter requestParameters.inquiryBnId was null or undefined when calling rcmsApi1Inquiry1MessagesUpdatePost.');
                                        }
                                        if (requestParameters.inlineObject15 === null || requestParameters.inlineObject15 === undefined) {
                                            throw new runtime.RequiredError('inlineObject15', 'Required parameter requestParameters.inlineObject15 was null or undefined when calling rcmsApi1Inquiry1MessagesUpdatePost.');
                                        }
                                        queryParameters = {};
                                        if (requestParameters.outputFormat !== undefined) {
                                            queryParameters['_output_format'] = requestParameters.outputFormat;
                                        }
                                        if (requestParameters.lang !== undefined) {
                                            queryParameters['_lang'] = requestParameters.lang;
                                        }
                                        if (requestParameters.charset !== undefined) {
                                            queryParameters['_charset'] = requestParameters.charset;
                                        }
                                        if (requestParameters.inquiryBnId !== undefined) {
                                            queryParameters['inquiry_bn_id'] = requestParameters.inquiryBnId;
                                        }
                                        headerParameters = {};
                                        headerParameters['Content-Type'] = 'application/json';
                                        if (this.configuration && this.configuration.apiKey) {
                                            headerParameters["X-RCMS-API-ACCESS-TOKEN"] = this.configuration.apiKey("X-RCMS-API-ACCESS-TOKEN"); // Token-Auth authentication
                                        }
                                        return [4 /*yield*/, this.request({
                                                path: "/rcms-api/1/inquiry1/messages/update",
                                                method: 'POST',
                                                headers: headerParameters,
                                                query: queryParameters,
                                                body: InlineObject15ToJSON(requestParameters.inlineObject15),
                                            })];
                                    case 1:
                                        response = _a.sent();
                                        return [2 /*return*/, new runtime.JSONApiResponse(response)];
                                }
                            });
                        }); };
                        return [4 /*yield*/, rcmsApi1Inquiry1MessagesUpdatePostRaw(requestParameters)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     *  ### **InquiryForm::list (v1)**  null
     */
    InquiriesApi.prototype.rcmsApi1InquiryFormsGet = function (requestParameters) {
        return __awaiter(this, void 0, void 0, function () {
            var rcmsApi1InquiryFormsGetRaw;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        rcmsApi1InquiryFormsGetRaw = function (requestParameters) { return __awaiter(_this, void 0, void 0, function () {
                            var queryParameters, headerParameters, response;
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0:
                                        if (requestParameters === null || requestParameters === undefined) {
                                            throw new runtime.RequiredError('request parameter was null or undefined', [
                                                'request parameter was null or undefined when calling rcmsApi1InquiryFormsGet.',
                                                'This method requires parameters even if defined parameters are all optional (not required).',
                                                'In case of that, please specify empty Object.',
                                                'e.g. rcmsApi1InquiryFormsGet({})'
                                            ].join('\n'));
                                        }
                                        queryParameters = {};
                                        if (requestParameters.outputFormat !== undefined) {
                                            queryParameters['_output_format'] = requestParameters.outputFormat;
                                        }
                                        if (requestParameters.lang !== undefined) {
                                            queryParameters['_lang'] = requestParameters.lang;
                                        }
                                        if (requestParameters.charset !== undefined) {
                                            queryParameters['_charset'] = requestParameters.charset;
                                        }
                                        headerParameters = {};
                                        if (this.configuration && this.configuration.apiKey) {
                                            headerParameters["X-RCMS-API-ACCESS-TOKEN"] = this.configuration.apiKey("X-RCMS-API-ACCESS-TOKEN"); // Token-Auth authentication
                                        }
                                        return [4 /*yield*/, this.request({
                                                path: "/rcms-api/1/inquiry/forms",
                                                method: 'GET',
                                                headers: headerParameters,
                                                query: queryParameters,
                                            })];
                                    case 1:
                                        response = _a.sent();
                                        return [2 /*return*/, new runtime.JSONApiResponse(response)];
                                }
                            });
                        }); };
                        return [4 /*yield*/, rcmsApi1InquiryFormsGetRaw(requestParameters)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     *  ### **InquiryForm::details (v1)**  null
     */
    InquiriesApi.prototype.rcmsApi1InquiryFormsInquiryIdGet = function (requestParameters) {
        return __awaiter(this, void 0, void 0, function () {
            var rcmsApi1InquiryFormsInquiryIdGetRaw;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        rcmsApi1InquiryFormsInquiryIdGetRaw = function (requestParameters) { return __awaiter(_this, void 0, void 0, function () {
                            var queryParameters, headerParameters, response;
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0:
                                        if (requestParameters === null || requestParameters === undefined) {
                                            throw new runtime.RequiredError('request parameter was null or undefined', [
                                                'request parameter was null or undefined when calling rcmsApi1InquiryFormsInquiryIdGet.',
                                                'This method requires parameters even if defined parameters are all optional (not required).',
                                                'In case of that, please specify empty Object.',
                                                'e.g. rcmsApi1InquiryFormsInquiryIdGet({})'
                                            ].join('\n'));
                                        }
                                        if (requestParameters.inquiryId === null || requestParameters.inquiryId === undefined) {
                                            throw new runtime.RequiredError('inquiryId', 'Required parameter requestParameters.inquiryId was null or undefined when calling rcmsApi1InquiryFormsInquiryIdGet.');
                                        }
                                        queryParameters = {};
                                        if (requestParameters.outputFormat !== undefined) {
                                            queryParameters['_output_format'] = requestParameters.outputFormat;
                                        }
                                        if (requestParameters.lang !== undefined) {
                                            queryParameters['_lang'] = requestParameters.lang;
                                        }
                                        if (requestParameters.charset !== undefined) {
                                            queryParameters['_charset'] = requestParameters.charset;
                                        }
                                        headerParameters = {};
                                        if (this.configuration && this.configuration.apiKey) {
                                            headerParameters["X-RCMS-API-ACCESS-TOKEN"] = this.configuration.apiKey("X-RCMS-API-ACCESS-TOKEN"); // Token-Auth authentication
                                        }
                                        return [4 /*yield*/, this.request({
                                                path: "/rcms-api/1/inquiry/forms/{inquiry_id}".replace("{" + "inquiry_id" + "}", encodeURIComponent(String(requestParameters.inquiryId))),
                                                method: 'GET',
                                                headers: headerParameters,
                                                query: queryParameters,
                                            })];
                                    case 1:
                                        response = _a.sent();
                                        return [2 /*return*/, new runtime.JSONApiResponse(response)];
                                }
                            });
                        }); };
                        return [4 /*yield*/, rcmsApi1InquiryFormsInquiryIdGetRaw(requestParameters)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    return InquiriesApi;
}(runtime.BaseAPI));
export { InquiriesApi };
