/* tslint:disable */
/* eslint-disable */
import { __awaiter, __extends, __generator } from "tslib";
/**
 * Test
 * test
 *
 * The version of the OpenAPI document: 1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { InlineObject14Description, InlineObject14ToJSON, InlineObject15Description, InlineObject15ToJSON, } from '../models';
var usingModelsDescription = {
    InlineObject14: InlineObject14Description.split('\n').map(function (str) { return "  " + str; }).join('\n'),
    InlineObject15: InlineObject15Description.split('\n').map(function (str) { return "  " + str; }).join('\n'),
};
var FavoritesApiRcmsApi1FavoritesDeletePostRequestDescription = (function (usingModelsDescription) { return "{\n    inlineObject15: " + usingModelsDescription.InlineObject15 + ";\n    outputFormat?: string;\n    lang?: string;\n    charset?: string;\n}"; })(usingModelsDescription);
var FavoritesApiRcmsApi1FavoritesGetRequestDescription = (function (usingModelsDescription) { return "{\n    outputFormat?: string;\n    lang?: string;\n    charset?: string;\n    cnt?: number;\n    pageID?: number;\n    moduleId?: Array<number>;\n    memberId?: Array<number>;\n    rcmsid?: Array<string>;\n    groupBy?: string;\n    groupAs?: string;\n}"; })(usingModelsDescription);
var FavoritesApiRcmsApi1FavoritesInsertPostRequestDescription = (function (usingModelsDescription) { return "{\n    inlineObject14: " + usingModelsDescription.InlineObject14 + ";\n    outputFormat?: string;\n    lang?: string;\n    charset?: string;\n}"; })(usingModelsDescription);
/**
 * no description
 */
var FavoritesApi = /** @class */ (function (_super) {
    __extends(FavoritesApi, _super);
    function FavoritesApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(FavoritesApi, "className", {
        get: function () {
            return 'FavoritesApi';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FavoritesApi, "infos", {
        get: function () {
            return [
                {
                    class: FavoritesApi,
                    url: "/rcms-api/1/favorites/delete",
                    requestMethodName: 'rcmsApi1FavoritesDeletePost',
                    requestRequiredParamSample: {
                        inlineObject15: {},
                    },
                    requestParamInterfaceDescription: FavoritesApiRcmsApi1FavoritesDeletePostRequestDescription,
                },
                {
                    class: FavoritesApi,
                    url: "/rcms-api/1/favorites",
                    requestMethodName: 'rcmsApi1FavoritesGet',
                    requestRequiredParamSample: {},
                    requestParamInterfaceDescription: FavoritesApiRcmsApi1FavoritesGetRequestDescription,
                },
                {
                    class: FavoritesApi,
                    url: "/rcms-api/1/favorites/insert",
                    requestMethodName: 'rcmsApi1FavoritesInsertPost',
                    requestRequiredParamSample: {
                        inlineObject14: {},
                    },
                    requestParamInterfaceDescription: FavoritesApiRcmsApi1FavoritesInsertPostRequestDescription,
                },
            ];
        },
        enumerable: true,
        configurable: true
    });
    /**
     *  ### **Favorite::delete (v1)**
     */
    FavoritesApi.prototype.rcmsApi1FavoritesDeletePost = function (requestParameters) {
        return __awaiter(this, void 0, void 0, function () {
            var rcmsApi1FavoritesDeletePostRaw;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        rcmsApi1FavoritesDeletePostRaw = function (requestParameters) { return __awaiter(_this, void 0, void 0, function () {
                            var queryParameters, headerParameters, response;
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0:
                                        if (requestParameters === null || requestParameters === undefined) {
                                            throw new runtime.RequiredError('request parameter was null or undefined', [
                                                'request parameter was null or undefined when calling rcmsApi1FavoritesDeletePost.',
                                                'This method requires parameters even if defined parameters are all optional (not required).',
                                                'In case of that, please specify empty Object.',
                                                'e.g. rcmsApi1FavoritesDeletePost({})'
                                            ].join('\n'));
                                        }
                                        if (requestParameters.inlineObject15 === null || requestParameters.inlineObject15 === undefined) {
                                            throw new runtime.RequiredError('inlineObject15', 'Required parameter requestParameters.inlineObject15 was null or undefined when calling rcmsApi1FavoritesDeletePost.');
                                        }
                                        queryParameters = {};
                                        if (requestParameters.outputFormat !== undefined) {
                                            queryParameters['_output_format'] = requestParameters.outputFormat;
                                        }
                                        if (requestParameters.lang !== undefined) {
                                            queryParameters['_lang'] = requestParameters.lang;
                                        }
                                        if (requestParameters.charset !== undefined) {
                                            queryParameters['_charset'] = requestParameters.charset;
                                        }
                                        headerParameters = {};
                                        headerParameters['Content-Type'] = 'application/json';
                                        if (this.configuration && this.configuration.apiKey) {
                                            headerParameters["X-RCMS-API-ACCESS-TOKEN"] = this.configuration.apiKey("X-RCMS-API-ACCESS-TOKEN"); // Token-Auth authentication
                                        }
                                        return [4 /*yield*/, this.request({
                                                path: "/rcms-api/1/favorites/delete",
                                                method: 'POST',
                                                headers: headerParameters,
                                                query: queryParameters,
                                                body: InlineObject15ToJSON(requestParameters.inlineObject15),
                                            })];
                                    case 1:
                                        response = _a.sent();
                                        return [2 /*return*/, new runtime.JSONApiResponse(response)];
                                }
                            });
                        }); };
                        return [4 /*yield*/, rcmsApi1FavoritesDeletePostRaw(requestParameters)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     *  ### **Favorite::list (v1)**   ## Controller parameters  > **module_type** `topics`
     */
    FavoritesApi.prototype.rcmsApi1FavoritesGet = function (requestParameters) {
        return __awaiter(this, void 0, void 0, function () {
            var rcmsApi1FavoritesGetRaw;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        rcmsApi1FavoritesGetRaw = function (requestParameters) { return __awaiter(_this, void 0, void 0, function () {
                            var queryParameters, headerParameters, response;
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0:
                                        if (requestParameters === null || requestParameters === undefined) {
                                            throw new runtime.RequiredError('request parameter was null or undefined', [
                                                'request parameter was null or undefined when calling rcmsApi1FavoritesGet.',
                                                'This method requires parameters even if defined parameters are all optional (not required).',
                                                'In case of that, please specify empty Object.',
                                                'e.g. rcmsApi1FavoritesGet({})'
                                            ].join('\n'));
                                        }
                                        queryParameters = {};
                                        if (requestParameters.outputFormat !== undefined) {
                                            queryParameters['_output_format'] = requestParameters.outputFormat;
                                        }
                                        if (requestParameters.lang !== undefined) {
                                            queryParameters['_lang'] = requestParameters.lang;
                                        }
                                        if (requestParameters.charset !== undefined) {
                                            queryParameters['_charset'] = requestParameters.charset;
                                        }
                                        if (requestParameters.cnt !== undefined) {
                                            queryParameters['cnt'] = requestParameters.cnt;
                                        }
                                        if (requestParameters.pageID !== undefined) {
                                            queryParameters['pageID'] = requestParameters.pageID;
                                        }
                                        if (requestParameters.moduleId) {
                                            queryParameters['module_id[]'] = requestParameters.moduleId;
                                        }
                                        if (requestParameters.memberId) {
                                            queryParameters['member_id[]'] = requestParameters.memberId;
                                        }
                                        if (requestParameters.rcmsid) {
                                            queryParameters['rcmsid[]'] = requestParameters.rcmsid;
                                        }
                                        if (requestParameters.groupBy !== undefined) {
                                            queryParameters['groupBy'] = requestParameters.groupBy;
                                        }
                                        if (requestParameters.groupAs !== undefined) {
                                            queryParameters['groupAs'] = requestParameters.groupAs;
                                        }
                                        headerParameters = {};
                                        if (this.configuration && this.configuration.apiKey) {
                                            headerParameters["X-RCMS-API-ACCESS-TOKEN"] = this.configuration.apiKey("X-RCMS-API-ACCESS-TOKEN"); // Token-Auth authentication
                                        }
                                        return [4 /*yield*/, this.request({
                                                path: "/rcms-api/1/favorites",
                                                method: 'GET',
                                                headers: headerParameters,
                                                query: queryParameters,
                                            })];
                                    case 1:
                                        response = _a.sent();
                                        return [2 /*return*/, new runtime.JSONApiResponse(response)];
                                }
                            });
                        }); };
                        return [4 /*yield*/, rcmsApi1FavoritesGetRaw(requestParameters)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     *  ### **Favorite::insert (v1)**
     */
    FavoritesApi.prototype.rcmsApi1FavoritesInsertPost = function (requestParameters) {
        return __awaiter(this, void 0, void 0, function () {
            var rcmsApi1FavoritesInsertPostRaw;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        rcmsApi1FavoritesInsertPostRaw = function (requestParameters) { return __awaiter(_this, void 0, void 0, function () {
                            var queryParameters, headerParameters, response;
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0:
                                        if (requestParameters === null || requestParameters === undefined) {
                                            throw new runtime.RequiredError('request parameter was null or undefined', [
                                                'request parameter was null or undefined when calling rcmsApi1FavoritesInsertPost.',
                                                'This method requires parameters even if defined parameters are all optional (not required).',
                                                'In case of that, please specify empty Object.',
                                                'e.g. rcmsApi1FavoritesInsertPost({})'
                                            ].join('\n'));
                                        }
                                        if (requestParameters.inlineObject14 === null || requestParameters.inlineObject14 === undefined) {
                                            throw new runtime.RequiredError('inlineObject14', 'Required parameter requestParameters.inlineObject14 was null or undefined when calling rcmsApi1FavoritesInsertPost.');
                                        }
                                        queryParameters = {};
                                        if (requestParameters.outputFormat !== undefined) {
                                            queryParameters['_output_format'] = requestParameters.outputFormat;
                                        }
                                        if (requestParameters.lang !== undefined) {
                                            queryParameters['_lang'] = requestParameters.lang;
                                        }
                                        if (requestParameters.charset !== undefined) {
                                            queryParameters['_charset'] = requestParameters.charset;
                                        }
                                        headerParameters = {};
                                        headerParameters['Content-Type'] = 'application/json';
                                        if (this.configuration && this.configuration.apiKey) {
                                            headerParameters["X-RCMS-API-ACCESS-TOKEN"] = this.configuration.apiKey("X-RCMS-API-ACCESS-TOKEN"); // Token-Auth authentication
                                        }
                                        return [4 /*yield*/, this.request({
                                                path: "/rcms-api/1/favorites/insert",
                                                method: 'POST',
                                                headers: headerParameters,
                                                query: queryParameters,
                                                body: InlineObject14ToJSON(requestParameters.inlineObject14),
                                            })];
                                    case 1:
                                        response = _a.sent();
                                        return [2 /*return*/, new runtime.JSONApiResponse(response)];
                                }
                            });
                        }); };
                        return [4 /*yield*/, rcmsApi1FavoritesInsertPostRaw(requestParameters)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    return FavoritesApi;
}(runtime.BaseAPI));
export { FavoritesApi };
