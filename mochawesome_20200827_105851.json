{
  "stats": {
    "suites": 1,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2020-08-27T10:58:19.867Z",
    "end": "2020-08-27T10:58:51.354Z",
    "duration": 31487,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "964f8415-fc55-476d-a5ff-04b68c7954c7",
      "title": "",
      "fullFile": "tests/e2e/specs/pattern/Comment.js",
      "file": "tests/e2e/specs/pattern/Comment.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c44ca802-6935-439b-9907-10cd0abaf96d",
          "title": "Comment pattern",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "insert comment without required module_id -> error",
              "fullTitle": "Comment pattern insert comment without required module_id -> error",
              "timedOut": null,
              "duration": 5722,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "5291fdba-3088-43b9-bfe3-ac9e6a1e6be5",
              "parentUUID": "c44ca802-6935-439b-9907-10cd0abaf96d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "insert comment without required name -> error",
              "fullTitle": "Comment pattern insert comment without required name -> error",
              "timedOut": null,
              "duration": 3193,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "675d4db9-dbcc-4094-9b08-204a10defe00",
              "parentUUID": "c44ca802-6935-439b-9907-10cd0abaf96d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "insert comment without required note -> error",
              "fullTitle": "Comment pattern insert comment without required note -> error",
              "timedOut": null,
              "duration": 2832,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "54e2660c-4ce8-470f-8819-3ee846e16caa",
              "parentUUID": "c44ca802-6935-439b-9907-10cd0abaf96d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "insert comment with malformed module_id -> error",
              "fullTitle": "Comment pattern insert comment with malformed module_id -> error",
              "timedOut": null,
              "duration": 2765,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "ade8c093-fa15-4dfe-9509-b4e85f0fa0ca",
              "parentUUID": "c44ca802-6935-439b-9907-10cd0abaf96d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "insert comment with malformed name -> error",
              "fullTitle": "Comment pattern insert comment with malformed name -> error",
              "timedOut": null,
              "duration": 2836,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "0c1723fc-fc26-4f34-bd59-5376e44066c8",
              "parentUUID": "c44ca802-6935-439b-9907-10cd0abaf96d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "insert comment with malformed mail -> error",
              "fullTitle": "Comment pattern insert comment with malformed mail -> error",
              "timedOut": null,
              "duration": 2769,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "51b01d49-bf5b-4a21-92f4-68b6b2e420d7",
              "parentUUID": "c44ca802-6935-439b-9907-10cd0abaf96d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "insert comment with malformed url -> error",
              "fullTitle": "Comment pattern insert comment with malformed url -> error",
              "timedOut": null,
              "duration": 2795,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "c1d68ab3-ccfb-4be8-8c3a-28052c34efad",
              "parentUUID": "c44ca802-6935-439b-9907-10cd0abaf96d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "insert comment with malformed note -> error",
              "fullTitle": "Comment pattern insert comment with malformed note -> error",
              "timedOut": null,
              "duration": 2904,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "fc1b9de2-2a4b-4583-a11f-ab1270960055",
              "parentUUID": "c44ca802-6935-439b-9907-10cd0abaf96d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "insert comment with malformed rating -> error",
              "fullTitle": "Comment pattern insert comment with malformed rating -> error",
              "timedOut": null,
              "duration": 2693,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "ac571bb8-82c6-4692-bb85-0e2698366d9e",
              "parentUUID": "c44ca802-6935-439b-9907-10cd0abaf96d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "insert comment with malformed delkey -> error",
              "fullTitle": "Comment pattern insert comment with malformed delkey -> error",
              "timedOut": null,
              "duration": 2840,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "c576b620-a2a3-4b10-b7a8-b36967f9535b",
              "parentUUID": "c44ca802-6935-439b-9907-10cd0abaf96d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5291fdba-3088-43b9-bfe3-ac9e6a1e6be5",
            "675d4db9-dbcc-4094-9b08-204a10defe00",
            "54e2660c-4ce8-470f-8819-3ee846e16caa",
            "ade8c093-fa15-4dfe-9509-b4e85f0fa0ca",
            "0c1723fc-fc26-4f34-bd59-5376e44066c8",
            "51b01d49-bf5b-4a21-92f4-68b6b2e420d7",
            "c1d68ab3-ccfb-4be8-8c3a-28052c34efad",
            "fc1b9de2-2a4b-4583-a11f-ab1270960055",
            "ac571bb8-82c6-4692-bb85-0e2698366d9e",
            "c576b620-a2a3-4b10-b7a8-b36967f9535b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 31349,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.1.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": {
        "reportDir": "report",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true,
        "timestamp": "yyyymmdd_HHMMss"
      },
      "version": "5.1.0"
    }
  }
}