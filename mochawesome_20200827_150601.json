{
  "stats": {
    "suites": 1,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2020-08-27T15:05:31.378Z",
    "end": "2020-08-27T15:06:01.332Z",
    "duration": 29954,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "52b7fcb5-e123-40e0-88f9-06b5ad40d7cd",
      "title": "",
      "fullFile": "tests/e2e/specs/pattern/Comment.js",
      "file": "tests/e2e/specs/pattern/Comment.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d14e414d-33c1-42c7-a380-57aa9fc6bb96",
          "title": "Comment pattern",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "insert comment without required module_id -> error",
              "fullTitle": "Comment pattern insert comment without required module_id -> error",
              "timedOut": null,
              "duration": 5359,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "9a887ef3-e7d7-477e-ba51-59447c4dcf9b",
              "parentUUID": "d14e414d-33c1-42c7-a380-57aa9fc6bb96",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "insert comment without required name -> error",
              "fullTitle": "Comment pattern insert comment without required name -> error",
              "timedOut": null,
              "duration": 3032,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "55e1ed93-f062-4b6c-843b-d417916b0a02",
              "parentUUID": "d14e414d-33c1-42c7-a380-57aa9fc6bb96",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "insert comment without required note -> error",
              "fullTitle": "Comment pattern insert comment without required note -> error",
              "timedOut": null,
              "duration": 2695,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "964a1113-35ad-445f-b39b-91e8ff0769df",
              "parentUUID": "d14e414d-33c1-42c7-a380-57aa9fc6bb96",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "insert comment with malformed module_id -> error",
              "fullTitle": "Comment pattern insert comment with malformed module_id -> error",
              "timedOut": null,
              "duration": 2577,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "82efe985-5d67-40b9-82f1-6d6473a0fe2a",
              "parentUUID": "d14e414d-33c1-42c7-a380-57aa9fc6bb96",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "insert comment with malformed name -> error",
              "fullTitle": "Comment pattern insert comment with malformed name -> error",
              "timedOut": null,
              "duration": 2746,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "1b274dca-1ff5-4f59-83dd-ead3ac4240e8",
              "parentUUID": "d14e414d-33c1-42c7-a380-57aa9fc6bb96",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "insert comment with malformed mail -> error",
              "fullTitle": "Comment pattern insert comment with malformed mail -> error",
              "timedOut": null,
              "duration": 2740,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "df92fd5e-cd5d-4936-8419-0666aebc07ed",
              "parentUUID": "d14e414d-33c1-42c7-a380-57aa9fc6bb96",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "insert comment with malformed url -> error",
              "fullTitle": "Comment pattern insert comment with malformed url -> error",
              "timedOut": null,
              "duration": 2562,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "ae817b38-2362-4ee1-9709-fb925e6f9733",
              "parentUUID": "d14e414d-33c1-42c7-a380-57aa9fc6bb96",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "insert comment with malformed note -> error",
              "fullTitle": "Comment pattern insert comment with malformed note -> error",
              "timedOut": null,
              "duration": 2825,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "c4209f58-0343-468a-b3cc-9fed768617cd",
              "parentUUID": "d14e414d-33c1-42c7-a380-57aa9fc6bb96",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "insert comment with malformed rating -> error",
              "fullTitle": "Comment pattern insert comment with malformed rating -> error",
              "timedOut": null,
              "duration": 2595,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "9135ab8c-843b-4475-994b-94d6c6ca2aa7",
              "parentUUID": "d14e414d-33c1-42c7-a380-57aa9fc6bb96",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "insert comment with malformed delkey -> error",
              "fullTitle": "Comment pattern insert comment with malformed delkey -> error",
              "timedOut": null,
              "duration": 2691,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "700dbf7a-23ab-4181-84a0-6d757c77f410",
              "parentUUID": "d14e414d-33c1-42c7-a380-57aa9fc6bb96",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9a887ef3-e7d7-477e-ba51-59447c4dcf9b",
            "55e1ed93-f062-4b6c-843b-d417916b0a02",
            "964a1113-35ad-445f-b39b-91e8ff0769df",
            "82efe985-5d67-40b9-82f1-6d6473a0fe2a",
            "1b274dca-1ff5-4f59-83dd-ead3ac4240e8",
            "df92fd5e-cd5d-4936-8419-0666aebc07ed",
            "ae817b38-2362-4ee1-9709-fb925e6f9733",
            "c4209f58-0343-468a-b3cc-9fed768617cd",
            "9135ab8c-843b-4475-994b-94d6c6ca2aa7",
            "700dbf7a-23ab-4181-84a0-6d757c77f410"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 29822,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.1.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": {
        "reportDir": "report",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true,
        "timestamp": "yyyymmdd_HHMMss"
      },
      "version": "5.1.0"
    }
  }
}